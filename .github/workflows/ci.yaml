# README Badge → pega esta línea en tu README.md si quieres mostrar el estado:
# ![CI](https://github.com/JoanAbad82/BOT_INTELIGENTE/actions/workflows/ci.yaml/badge.svg)

name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

# Evita ejecutar trabajos duplicados en el mismo ref
concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    timeout-minutes: 30

    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Opcional) Escaneo de secretos
      - name: Gitleaks (secret scan)
        if: ${{ !cancelled() }}
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner --redact

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: pip

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry

      - name: Configure Poetry (no venv)
        run: poetry config virtualenvs.create false

      - name: Cache Poetry
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            poetry-${{ runner.os }}-${{ matrix.python-version }}-

      - name: Install deps (main + dev)
        run: poetry install --with dev --no-interaction --no-ansi

      # Lint & type-check
      - name: Ruff
        run: poetry run ruff check .
      - name: Black (check)
        run: poetry run black --check .
      - name: Mypy
        run: poetry run mypy src

      - name: Run tests
        run: poetry run pytest -q

      # ⬇️ Subida de artefactos (reportes y manifiestos)
      - name: Upload reports & manifests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-and-manifests-${{ matrix.python-version }}
          path: |
            reports/**
            **/*.manifest.json
            **/manifest.json
            reports/filelist.csv
          if-no-files-found: ignore
