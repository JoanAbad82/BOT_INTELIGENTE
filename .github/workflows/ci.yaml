name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build-test:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ "3.11", "3.12" ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # (Opcional) Escaneo de secretos
      - name: Gitleaks (secret scan)
        if: ${{ !cancelled() }}
        uses: gitleaks/gitleaks-action@v2
        with:
          args: detect --source . --no-banner --redact

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install Poetry
        run: |
          pip install --upgrade pip
          pip install poetry

      - name: Configure Poetry (no venv)
        run: poetry config virtualenvs.create false

      - name: Install deps
        run: poetry install --no-interaction --no-ansi

      # Lint & format
      - name: Ruff
        run: poetry run ruff check .
      - run: poetry run black --check .
      - name: Mypy
        run: poetry run mypy src

      - name: Run tests
        run: poetry run pytest -q

      # ⬇️ Subida de artefactos (reportes y manifiestos)
      - name: Upload reports & manifests
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: reports-and-manifests-${{ matrix.python-version }}
          path: |
            reports/**
            **/*.manifest.json
            **/manifest.json
            reports/filelist.csv
          if-no-files-found: ignore
